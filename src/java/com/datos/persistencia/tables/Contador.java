/**
 * This class is generated by jOOQ
 */
package persistencia.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import persistencia.Keys;
import persistencia.Kutipak;
import persistencia.tables.records.ContadorRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Contador extends TableImpl<ContadorRecord> {

	private static final long serialVersionUID = 1923133153;

	/**
	 * The reference instance of <code>kutipak.contador</code>
	 */
	public static final Contador CONTADOR = new Contador();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ContadorRecord> getRecordType() {
		return ContadorRecord.class;
	}

	/**
	 * The column <code>kutipak.contador.contadorID</code>.
	 */
	public final TableField<ContadorRecord, Integer> CONTADORID = createField("contadorID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>kutipak.contador.valor</code>.
	 */
	public final TableField<ContadorRecord, Integer> VALOR = createField("valor", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>kutipak.contador</code> table reference
	 */
	public Contador() {
		this("contador", null);
	}

	/**
	 * Create an aliased <code>kutipak.contador</code> table reference
	 */
	public Contador(String alias) {
		this(alias, CONTADOR);
	}

	private Contador(String alias, Table<ContadorRecord> aliased) {
		this(alias, aliased, null);
	}

	private Contador(String alias, Table<ContadorRecord> aliased, Field<?>[] parameters) {
		super(alias, Kutipak.KUTIPAK, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ContadorRecord, Integer> getIdentity() {
		return Keys.IDENTITY_CONTADOR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ContadorRecord> getPrimaryKey() {
		return Keys.KEY_CONTADOR_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ContadorRecord>> getKeys() {
		return Arrays.<UniqueKey<ContadorRecord>>asList(Keys.KEY_CONTADOR_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Contador as(String alias) {
		return new Contador(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Contador rename(String name) {
		return new Contador(name, null);
	}
}
