/**
 * This class is generated by jOOQ
 */
package persistencia.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import persistencia.Keys;
import persistencia.Kutipak;
import persistencia.tables.records.SugerenciasRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Sugerencias extends TableImpl<SugerenciasRecord> {

	private static final long serialVersionUID = -1855717341;

	/**
	 * The reference instance of <code>kutipak.sugerencias</code>
	 */
	public static final Sugerencias SUGERENCIAS = new Sugerencias();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<SugerenciasRecord> getRecordType() {
		return SugerenciasRecord.class;
	}

	/**
	 * The column <code>kutipak.sugerencias.sugerenciasID</code>.
	 */
	public final TableField<SugerenciasRecord, Integer> SUGERENCIASID = createField("sugerenciasID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>kutipak.sugerencias.sirvio</code>.
	 */
	public final TableField<SugerenciasRecord, Boolean> SIRVIO = createField("sirvio", org.jooq.impl.SQLDataType.BIT, this, "");

	/**
	 * The column <code>kutipak.sugerencias.tiempo</code>.
	 */
	public final TableField<SugerenciasRecord, Boolean> TIEMPO = createField("tiempo", org.jooq.impl.SQLDataType.BIT, this, "");

	/**
	 * The column <code>kutipak.sugerencias.comentario</code>.
	 */
	public final TableField<SugerenciasRecord, String> COMENTARIO = createField("comentario", org.jooq.impl.SQLDataType.VARCHAR.length(500), this, "");

	/**
	 * Create a <code>kutipak.sugerencias</code> table reference
	 */
	public Sugerencias() {
		this("sugerencias", null);
	}

	/**
	 * Create an aliased <code>kutipak.sugerencias</code> table reference
	 */
	public Sugerencias(String alias) {
		this(alias, SUGERENCIAS);
	}

	private Sugerencias(String alias, Table<SugerenciasRecord> aliased) {
		this(alias, aliased, null);
	}

	private Sugerencias(String alias, Table<SugerenciasRecord> aliased, Field<?>[] parameters) {
		super(alias, Kutipak.KUTIPAK, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<SugerenciasRecord, Integer> getIdentity() {
		return Keys.IDENTITY_SUGERENCIAS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<SugerenciasRecord> getPrimaryKey() {
		return Keys.KEY_SUGERENCIAS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<SugerenciasRecord>> getKeys() {
		return Arrays.<UniqueKey<SugerenciasRecord>>asList(Keys.KEY_SUGERENCIAS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Sugerencias as(String alias) {
		return new Sugerencias(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Sugerencias rename(String name) {
		return new Sugerencias(name, null);
	}
}
